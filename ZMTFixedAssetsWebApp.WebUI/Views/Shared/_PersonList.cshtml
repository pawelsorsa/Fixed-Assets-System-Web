@model ZMTFixedAssetsWebApp.WebUI.Models.PersonListModel

<table id="person-list-table" width="100%">
            <thead>
                <tr class='table_head_list'>
                    <th width="4%">ID</th>
                    <th width="20%">Name</th>
                    <th width="20%">Surname</th>
                    <th width="10%">Sekcja</th>
                    <th width="22%">Email</th>
                    <th width="10%">Telefon</th>
                    <th width="10%">Telefon2</th>
                    <th width="4%">Edytowanie</th>
                </tr>
            </thead>
            <tbody>

@foreach (var x in Model.List)
{
     <tr>
            <td>@x.id</td>
            <td>@x.name</td>
            <td>@x.surname</td>
            <td>@x.section_name</td>
            <td>@x.email</td>
            <td>@x.phone_number</td>
            <td>@x.phone_number2</td>
            <td>@Html.ActionLink("Edytuj", "Edit", new { id = @x.id })</td>
     </tr>
}
    </tbody>
</table>
@{
    Dictionary<string, object> routeValues = new Dictionary<string, object>();
    routeValues.Add("Section", Model.Section);
    routeValues.Add("ShowAll", Model.ShowAll);
    routeValues.Add("OrderBy", Model.OrderBy);
    routeValues.Add("ItemsPerPage", Model.ItemsPerPage);
    routeValues.Add("ASC", Model.ASC);
    routeValues.Add("Query", Model.Query);
}
@{ if (!Model.ShowAll)
   {
    <div id="pager">
        @Ajax.Pager((int)Model.Page, (int)Model.TotalRecords, "list", routeValues, "Person", "List", (int)Model.ItemsPerPage)
    </div>   
    }
}


@using (Ajax.BeginForm("List", "Person", @Model, new AjaxOptions { UpdateTargetId = "list", HttpMethod = "POST" }))
{    
     @Html.HiddenFor(x => x.Page);
     @Html.HiddenFor(x => x.Section);                                   
     @Html.HiddenFor(x => x.TotalRecords);
     @Html.HiddenFor(x => x.Query);
     
    
     <p><div id="add_employee_btn">DODAJ PRACOWNIKA</div>Sortuj wg: @Html.DropDownListFor(x => x.OrderBy, @Model.DropDownList)
     Ilość wierszy: @Html.DropDownListFor(x => x.ItemsPerPage, @Model.ItemsPerPageList)
     Odwrotne sortowania: @Html.CheckBoxFor(x => x.ASC)
     Pokarz wszystkie: @Html.CheckBoxFor(x => x.ShowAll)
    <input type="submit" value="OK" />
    
    </p>  

}

@Html.ActionLink("Powrót", "List")



