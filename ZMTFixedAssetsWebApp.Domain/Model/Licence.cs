//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ZMTFixedAssetsWebApp.Domain.Model
{
    public partial class Licence
    {
        #region Primitive Properties
    
        public virtual int id_number
        {
            get;
            set;
        }
    
        public virtual string inventory_number
        {
            get;
            set;
        }
    
        public virtual int assign_fixed_asset
        {
            get { return _assign_fixed_asset; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_assign_fixed_asset != value)
                    {
                        if (FixedAsset != null && FixedAsset.id != value)
                        {
                            FixedAsset = null;
                        }
                        _assign_fixed_asset = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _assign_fixed_asset;
    
        public virtual string licence_number
        {
            get;
            set;
        }
    
        public virtual string name
        {
            get;
            set;
        }
    
        public virtual string comment
        {
            get;
            set;
        }
    
        public virtual int id_kind
        {
            get { return _id_kind; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_id_kind != value)
                    {
                        if (Kind != null && Kind.id != value)
                        {
                            Kind = null;
                        }
                        _id_kind = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _id_kind;
    
        public virtual string created_by
        {
            get { return _created_by; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_created_by != value)
                    {
                        if (MembershipUser != null && MembershipUser.login != value)
                        {
                            MembershipUser = null;
                        }
                        _created_by = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _created_by;
    
        public virtual System.DateTime last_modified_date
        {
            get;
            set;
        }
    
        public virtual string last_modified_login
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual FixedAsset FixedAsset
        {
            get { return _fixedAsset; }
            set
            {
                if (!ReferenceEquals(_fixedAsset, value))
                {
                    var previousValue = _fixedAsset;
                    _fixedAsset = value;
                    FixupFixedAsset(previousValue);
                }
            }
        }
        private FixedAsset _fixedAsset;
    
        public virtual Kind Kind
        {
            get { return _kind; }
            set
            {
                if (!ReferenceEquals(_kind, value))
                {
                    var previousValue = _kind;
                    _kind = value;
                    FixupKind(previousValue);
                }
            }
        }
        private Kind _kind;
    
        public virtual MembershipUser MembershipUser
        {
            get { return _membershipUser; }
            set
            {
                if (!ReferenceEquals(_membershipUser, value))
                {
                    var previousValue = _membershipUser;
                    _membershipUser = value;
                    FixupMembershipUser(previousValue);
                }
            }
        }
        private MembershipUser _membershipUser;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupFixedAsset(FixedAsset previousValue)
        {
            if (previousValue != null && previousValue.Licence.Contains(this))
            {
                previousValue.Licence.Remove(this);
            }
    
            if (FixedAsset != null)
            {
                if (!FixedAsset.Licence.Contains(this))
                {
                    FixedAsset.Licence.Add(this);
                }
                if (assign_fixed_asset != FixedAsset.id)
                {
                    assign_fixed_asset = FixedAsset.id;
                }
            }
        }
    
        private void FixupKind(Kind previousValue)
        {
            if (previousValue != null && previousValue.Licence.Contains(this))
            {
                previousValue.Licence.Remove(this);
            }
    
            if (Kind != null)
            {
                if (!Kind.Licence.Contains(this))
                {
                    Kind.Licence.Add(this);
                }
                if (id_kind != Kind.id)
                {
                    id_kind = Kind.id;
                }
            }
        }
    
        private void FixupMembershipUser(MembershipUser previousValue)
        {
            if (previousValue != null && previousValue.Licence.Contains(this))
            {
                previousValue.Licence.Remove(this);
            }
    
            if (MembershipUser != null)
            {
                if (!MembershipUser.Licence.Contains(this))
                {
                    MembershipUser.Licence.Add(this);
                }
                if (created_by != MembershipUser.login)
                {
                    created_by = MembershipUser.login;
                }
            }
            else if (!_settingFK)
            {
                created_by = null;
            }
        }

        #endregion
    }
}
