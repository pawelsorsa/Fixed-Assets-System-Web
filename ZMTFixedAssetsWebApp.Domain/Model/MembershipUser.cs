//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ZMTFixedAssetsWebApp.Domain.Model
{
    public partial class MembershipUser
    {
        #region Primitive Properties
    
        public virtual string login
        {
            get;
            set;
        }
    
        public virtual string password
        {
            get;
            set;
        }
    
        public virtual string email
        {
            get;
            set;
        }
    
        public virtual string name
        {
            get;
            set;
        }
    
        public virtual string surname
        {
            get;
            set;
        }
    
        public virtual System.DateTime creation_date
        {
            get;
            set;
        }
    
        public virtual System.DateTime last_login_date
        {
            get;
            set;
        }
    
        public virtual bool is_online
        {
            get;
            set;
        }
    
        public virtual bool is_active
        {
            get;
            set;
        }
    
        public virtual Nullable<int> PLKLogin
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Licence> Licences
        {
            get
            {
                if (_licences == null)
                {
                    var newCollection = new FixupCollection<Licence>();
                    newCollection.CollectionChanged += FixupLicences;
                    _licences = newCollection;
                }
                return _licences;
            }
            set
            {
                if (!ReferenceEquals(_licences, value))
                {
                    var previousValue = _licences as FixupCollection<Licence>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLicences;
                    }
                    _licences = value;
                    var newValue = value as FixupCollection<Licence>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLicences;
                    }
                }
            }
        }
        private ICollection<Licence> _licences;
    
        public virtual ICollection<MembershipRole> MembershipRoles
        {
            get
            {
                if (_membershipRoles == null)
                {
                    var newCollection = new FixupCollection<MembershipRole>();
                    newCollection.CollectionChanged += FixupMembershipRoles;
                    _membershipRoles = newCollection;
                }
                return _membershipRoles;
            }
            set
            {
                if (!ReferenceEquals(_membershipRoles, value))
                {
                    var previousValue = _membershipRoles as FixupCollection<MembershipRole>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMembershipRoles;
                    }
                    _membershipRoles = value;
                    var newValue = value as FixupCollection<MembershipRole>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMembershipRoles;
                    }
                }
            }
        }
        private ICollection<MembershipRole> _membershipRoles;

        #endregion
        #region Association Fixup
    
        private void FixupLicences(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Licence item in e.NewItems)
                {
                    item.MembershipUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Licence item in e.OldItems)
                {
                    if (ReferenceEquals(item.MembershipUser, this))
                    {
                        item.MembershipUser = null;
                    }
                }
            }
        }
    
        private void FixupMembershipRoles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MembershipRole item in e.NewItems)
                {
                    if (!item.MembershipUsers.Contains(this))
                    {
                        item.MembershipUsers.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MembershipRole item in e.OldItems)
                {
                    if (item.MembershipUsers.Contains(this))
                    {
                        item.MembershipUsers.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
